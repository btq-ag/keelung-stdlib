# modified from https://github.com/simonmichael/hledger/blob/master/.github/workflows/linux.yml

name: Profiling

on:
  push:
    branches:
      - profiling

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

    - name: üì• Checkout repository
      uses: actions/checkout@v2
    # Make sure the @v0.5.4 matches the current version of the
    # action 
    - uses: webfactory/ssh-agent@v0.5.4
      with:
        ssh-private-key: |
          ${{ secrets.KEELUNG_CI }}
          ${{ secrets.KEELUNG_COMPILER_CI }}
          ${{ secrets.KEELUNG_PROFILING }}

    # things to be cached/restored:

    - name: üíæ Cache stack global package db
      id:   stack-global
      uses: actions/cache@v2
      with:
        path: ~/.stack
        key: ${{ runner.os }}-stack-global-profiling-${{ matrix.plan.ghc }}-${{ hashFiles('**.yaml') }}
        restore-keys: |
             ${{ runner.os }}-stack-global-profiling-${{ matrix.plan.ghc }}
    - name: üíæ Cache stack-installed programs in ~/.local/bin
      id:   stack-programs
      uses: actions/cache@v2
      with:
        path: ~/.local/bin
        key: ${{ runner.os }}-stack-programs-profiling-${{ matrix.plan.ghc }}-${{ hashFiles('**.yaml') }}
        restore-keys: |
             ${{ runner.os }}-stack-programs-profiling-${{ matrix.plan.ghc }}
    - name: üíæ Cache .stack-work
      uses: actions/cache@v2
      with:
        path: .stack-work
        key: ${{ runner.os }}-stack-work-profiling-${{ matrix.plan.ghc }}-${{ hashFiles('**.yaml') }}
        restore-keys: |
             ${{ runner.os }}-stack-work-profiling-${{ matrix.plan.ghc }}
    - name: üíæ Cache keelung-compiler/.stack-work
      uses: actions/cache@v2
      with:
        path: keelung-compiler/.stack-work
        key: ${{ runner.os }}-keelung-compiler-stack-work-profiling-${{ matrix.plan.ghc }}-${{ hashFiles('keelung-compiler/package.yaml') }}
        restore-keys: |
             ${{ runner.os }}-keelung-compiler-stack-work-profiling-${{ matrix.plan.ghc }}
    - name: üíæ Cache keelung-examples/.stack-work
      uses: actions/cache@v2
      with:
        path: /keelung-examples/.stack-work
        key: ${{ runner.os }}-keelung-examples-stack-work-profiling-${{ matrix.plan.ghc }}-${{ hashFiles('./keelung-examples/package.yaml') }}
        restore-keys: |
             ${{ runner.os }}-keelung-examples-stack-work-profiling-${{ matrix.plan.ghc }}
    # actions:

    - name: ‚è¨ Install stack
      run: |
        mkdir -p ~/.local/bin
        export PATH=~/.local/bin:$PATH
        # curl -sL https://get.haskellstack.org/stable/linux-x86_64.tar.gz | tar xz --wildcards --strip-components=1 -C ~/.local/bin '*/stack'; chmod a+x ~/.local/bin/stack
        if [[ ! -x ~/.local/bin/stack ]]; then curl -sL https://get.haskellstack.org/stable/linux-x86_64.tar.gz | tar xz --wildcards --strip-components=1 -C ~/.local/bin '*/stack'; chmod a+x ~/.local/bin/stack; fi
        stack --version
    - name: ‚è¨ Install GHC
      run: |
        df -h
        stack setup --install-ghc
        df -h
    - name: üî® Build and install the compiler with profiling enabled
      run: |
        stack install --profile
    - name: üì• Checkout compiler
      uses: actions/checkout@v3
      with:
        repository: 'btq-ag/keelung-compiler'
        path: './keelung-compiler'
        ref: 'main'
        ssh-key: ${{ secrets.KEELUNG_COMPILER_CI }}
    - name: üî® Build and intsall the compiler with profiling enabled
      run: |
        cd ./keelung-compiler
        stack install --profile
        cd ..
    - name: üî• Install ghc-prof-flamegraph
      run: |
        stack install ghc-prof-flamegraph
    - name: ü©∫ Run profilings
      run: |
        cd $GITHUB_WORKSPACE
        stack exec profile

    - name: üì• Checkout profiling repo
      uses: actions/checkout@v3
      with:
        repository: 'btq-ag/Keelung-Profiling-Results'
        path: './results'
        ref: 'main'
        ssh-key: ${{ secrets.KEELUNG_PROFILING }}

    - name: Remove old profiling files
      run: |
        find "$GITHUB_WORKSPACE/results" -mindepth 1 -delete

    - name: üç≥ Prepare .prof files and flamegraphs
      run: |
        cd $GITHUB_WORKSPACE
        mv ./*.prof results
        cd results
        for f in *.prof; do ghc-prof-flamegraph --alloc $f -o $f-alloc.svg; ghc-prof-flamegraph --time $f -o $f-time.svg; done
        mkdir flamegraphs
        mv ./*.svg flamegraphs
        git add -A
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git commit -m 'profile with compiler@$GITHUB_SHA'
    - name: Wait a while
      run: |
        sleep 30m

    - name: üö¢ Ship profiling results
      uses: cpina/github-action-push-to-another-repository@main
      env:
        SSH_DEPLOY_KEY: ${{ secrets.KEELUNG }}
      with:
        source-directory: 'results'
        destination-github-username: 'btq-ag'
        destination-repository-name: 'Keelung-Profiling-Results'
        user-email: action@github.com
        target-branch: main
